    private long pow10(long x){
        x = (x*x)%A; //2
        long y = (x*x)%A; //4
        y = (y*y)%A; // 8
        return (y*x)%A;
    }

    private long inverse(long x){
        long z = x;
        for (int i = 0; i< 9; i++){
            z = pow10(z); // pow 10 9 times -> 10^9
        }
        long y = (x*x)%A; //2
        y = (y*y)%A; // 4
        y = (y*x)%A; // 5
        return (z*y)%A;
    }

// 1e9 + 7
//500000004 2的模反
// a和b必须互质才可以计算模反元素

BigInteger.valueOf(p).modInverse(BigInteger.valueOf(modulo)).intValue();
